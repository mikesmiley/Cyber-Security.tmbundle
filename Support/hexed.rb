#!/usr/bin/env ruby


class HexEd
  attr_accessor :bytes
  
  # Regex to find ASCII columns in strings copied from Hex + ASCII (hex editor-like) views
  # This matches ASCII columns generated by the to_hexed method in this module including the range of chars it generates.
  ASCIICOLUMNS = /(?<=^|  )[ -~]{8}(?:  )[ -~]{8}(?:$|\n)/
  
  def initialize(bytes)
    @bytes = bytes
  end
  
  def get_ascii
    bytes.pack("C*").scan(ASCIICOLUMNS).join
  end
  
  def render
    output = "="*75
  
    for i in (0..bytes.length-1).step(16)
        output += "\n%05d  " % i
        for j in (0..15)
            if i+j < bytes.length
                output += "%02X " % bytes[i+j]
            else
                output += "   "
            end
            if j == 7
                output += " "
            end
        end
  
        output += " "
  
        for j in (0..15)
            if i+j < bytes.length
                ch = bytes[i+j]
                if ch >= 32 and ch < 127
                    output += "%c" % ch
                else
                    output += "."
                end
            else
                output += " "
            end
            if j == 7
                output += "  "
            end
        end
    end
    output += "\nLength = %05d " % bytes.length + "="*60 + "\n"
  end
  
  
  
  
end
